diff -up mozilla-aurora/browser/components/preferences/advanced.xul.default mozilla-aurora/browser/components/preferences/advanced.xul
--- mozilla-aurora/browser/components/preferences/advanced.xul.default	2014-05-06 13:17:14.000000000 +0200
+++ mozilla-aurora/browser/components/preferences/advanced.xul	2014-05-06 14:07:22.972356178 +0200
@@ -40,7 +40,7 @@
 #endif
       <preference id="layout.spellcheckDefault"        name="layout.spellcheckDefault"        type="int"/>
 
-#ifdef HAVE_SHELL_SERVICE
+#ifdef 0
       <preference id="browser.shell.checkDefaultBrowser"
                   name="browser.shell.checkDefaultBrowser"
                   type="bool"/>
@@ -68,7 +68,7 @@
                   type="bool"/>
 
      <!-- Update tab -->
-#ifdef MOZ_UPDATER
+#ifdef 0
       <preference id="app.update.enabled"              name="app.update.enabled"              type="bool"/>
       <preference id="app.update.auto"                 name="app.update.auto"                 type="bool"/>
 #ifdef XP_WIN
@@ -102,7 +102,7 @@
                   type="bool"/>
     </preferences>
 
-#ifdef HAVE_SHELL_SERVICE
+#ifdef 0
     <stringbundle id="bundleShell" src="chrome://browser/locale/shellservice.properties"/>
     <stringbundle id="bundleBrand" src="chrome://branding/locale/brand.properties"/>
 #endif
@@ -170,7 +170,7 @@
                       preference="layout.spellcheckDefault"/>
           </groupbox>
 
-#ifdef HAVE_SHELL_SERVICE
+#ifdef 0
           <!-- System Defaults -->
           <groupbox id="systemDefaultsGroup" orient="vertical">
             <caption label="&systemDefaults.label;"/>
diff -up mozilla-aurora/browser/components/shell/src/Makefile.in.default mozilla-aurora/browser/components/shell/src/Makefile.in
diff -up mozilla-aurora/browser/components/shell/src/nsGNOMEShellService.cpp.default mozilla-aurora/browser/components/shell/src/nsGNOMEShellService.cpp
--- mozilla-aurora/browser/components/shell/src/nsGNOMEShellService.cpp.default	2014-05-06 13:17:14.000000000 +0200
+++ mozilla-aurora/browser/components/shell/src/nsGNOMEShellService.cpp	2014-05-06 14:07:22.973356181 +0200
@@ -149,8 +149,8 @@ nsGNOMEShellService::GetAppPathFromLaunc
 bool
 nsGNOMEShellService::KeyMatchesAppName(const char *aKeyValue) const
 {
+  nsAutoCString appName;
 
-  gchar *commandPath;
   if (mUseLocaleFilenames) {
     gchar *nativePath = g_filename_from_utf8(aKeyValue, -1,
                                              nullptr, nullptr, nullptr);
@@ -159,17 +159,13 @@ nsGNOMEShellService::KeyMatchesAppName(c
       return false;
     }
 
-    commandPath = g_find_program_in_path(nativePath);
+    appName.Assign(nativePath);
     g_free(nativePath);
   } else {
-    commandPath = g_find_program_in_path(aKeyValue);
+    appName.Assign(aKeyValue);
   }
 
-  if (!commandPath)
-    return false;
-
-  bool matches = mAppPath.Equals(commandPath);
-  g_free(commandPath);
+  bool matches = mAppPath.Equals(appName);
   return matches;
 }
 
@@ -254,16 +250,7 @@ nsGNOMEShellService::SetDefaultBrowser(b
   nsCOMPtr<nsIGConfService> gconf = do_GetService(NS_GCONFSERVICE_CONTRACTID);
   nsCOMPtr<nsIGIOService> giovfs = do_GetService(NS_GIOSERVICE_CONTRACTID);
   if (gconf) {
-    nsAutoCString appKeyValue;
-    if (mAppIsInPath) {
-      // mAppPath is in the users path, so use only the basename as the launcher
-      gchar *tmp = g_path_get_basename(mAppPath.get());
-      appKeyValue = tmp;
-      g_free(tmp);
-    } else {
-      appKeyValue = mAppPath;
-    }
-
+    nsAutoCString appKeyValue(MOZ_APP_NAME);
     appKeyValue.AppendLiteral(" %s");
 
     for (unsigned int i = 0; i < ArrayLength(appProtocols); ++i) {
diff -up mozilla-aurora/browser/components/shell/src/nsGNOMEShellService.h.default mozilla-aurora/browser/components/shell/src/nsGNOMEShellService.h
--- mozilla-aurora/browser/components/shell/src/nsGNOMEShellService.h.default	2014-05-06 13:17:14.000000000 +0200
+++ mozilla-aurora/browser/components/shell/src/nsGNOMEShellService.h	2014-05-06 14:07:22.973356181 +0200
@@ -13,7 +13,7 @@
 class nsGNOMEShellService MOZ_FINAL : public nsIShellService
 {
 public:
-  nsGNOMEShellService() : mCheckedThisSession(false), mAppIsInPath(false) { }
+  nsGNOMEShellService() : mCheckedThisSession(true), mAppIsInPath(true) { }
 
   NS_DECL_ISUPPORTS
   NS_DECL_NSISHELLSERVICE
